input {
  beats {
    port => 5000
    codec => json
  }
}

filter {
  # Parse JSON logs from Python backend
  if [json][message] {
    json {
      source => "[json][message]"
      target => "app"
      skip_on_invalid_json => true
    }
  }
  
  # Extract timestamp
  if [app][timestamp] {
    date {
      match => ["[app][timestamp]", "ISO8601"]
      target => "@timestamp"
    }
  }
  
  # Extract agent name for easier filtering
  if [app][agent] {
    mutate {
      add_field => { "agent_name" => "%{[app][agent]}" }
    }
  }
  
  # Extract user context (redacted for privacy)
  if [app][user_id] {
    mutate {
      add_field => { "user_hash" => "%{[app][user_id]}" }
    }
    mutate {
      remove_field => ["[app][user_id]"]
    }
  }
  
  # Convert processing time to float
  if [app][processing_time_ms] {
    mutate {
      convert => { "[app][processing_time_ms]" => "float" }
    }
  }
  
  # Add severity level tags for errors
  if [app][level] == "ERROR" or [app][level] == "CRITICAL" {
    mutate {
      add_tag => ["error"]
    }
  }
  
  # Add warning tags
  if [app][level] == "WARNING" {
    mutate {
      add_tag => ["warning"]
    }
  }
  
  # Tag crisis-related logs
  if [app][crisis_level] {
    mutate {
      add_tag => ["crisis"]
    }
  }
  
  # Tag intervention plan logs
  if [app][intervention_plan_id] {
    mutate {
      add_tag => ["intervention_plan"]
    }
  }
  
  # Clean up unwanted fields
  mutate {
    remove_field => ["agent", "ecs", "input", "log"]
  }
}

output {
  elasticsearch {
    hosts => ["elasticsearch:9200"]
    index => "ugm-aicare-%{+YYYY.MM.dd}"
    template_name => "ugm-aicare"
    template_overwrite => true
  }
}
