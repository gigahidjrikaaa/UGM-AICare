# Production Monitoring Stack
# This file extends docker-compose.prod.yml with monitoring services
# Usage: docker compose -f docker-compose.prod.yml -f docker-compose.prod-monitoring.yml up -d

services:
  #################
  # Elasticsearch (Log Storage)
  #################
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    container_name: ugm_aicare_elasticsearch_prod
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - cluster.name=ugm-aicare-prod
      - bootstrap.memory_lock=true
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    ports:
      - "8250:9200"  # HTTP API
      - "8251:9300"  # Transport
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    networks:
      - monitoring
      - internal_network

  #################
  # Logstash (Log Processing)
  #################
  logstash:
    image: docker.elastic.co/logstash/logstash:8.11.0
    container_name: ugm_aicare_logstash_prod
    volumes:
      - ../../infra/elk/logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro
      - ../../infra/elk/logstash/pipeline:/usr/share/logstash/pipeline:ro
    ports:
      - "8252:5000"  # TCP input
      - "8253:9600"  # API
    environment:
      - "LS_JAVA_OPTS=-Xmx256m -Xms256m"
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    depends_on:
      elasticsearch:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - monitoring
      - internal_network

  #################
  # Kibana (Log Visualization)
  #################
  kibana:
    image: docker.elastic.co/kibana/kibana:8.11.0
    container_name: ugm_aicare_kibana_prod
    ports:
      - "8254:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - SERVER_NAME=kibana-prod
    depends_on:
      elasticsearch:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5601/api/status || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    networks:
      - monitoring

  #################
  # Filebeat (Log Shipping)
  #################
  filebeat:
    image: docker.elastic.co/beats/filebeat:8.11.0
    container_name: ugm_aicare_filebeat_prod
    user: root
    volumes:
      - ../../infra/elk/filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - filebeat_data:/usr/share/filebeat/data
    command: filebeat -e -strict.perms=false
    depends_on:
      logstash:
        condition: service_started
    restart: unless-stopped
    networks:
      - monitoring

  #################
  # Prometheus (Metrics Database)
  #################
  prometheus:
    image: prom/prometheus:v2.48.0
    container_name: ugm_aicare_prometheus_prod
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=30d'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    volumes:
      - ../../infra/monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ../../infra/monitoring/prometheus/alert_rules.yml:/etc/prometheus/alert_rules.yml:ro
      - prometheus_data:/prometheus
    ports:
      - "8255:9090"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:9090/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - monitoring
      - internal_network

  #################
  # Grafana (Metrics Visualization)
  #################
  grafana:
    image: grafana/grafana:10.2.2
    container_name: ugm_aicare_grafana_prod
    volumes:
      - grafana_data:/var/lib/grafana
      - ../../infra/monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
      - ../../infra/monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-admin123}
      - GF_INSTALL_PLUGINS=redis-datasource
      - GF_SERVER_ROOT_URL=http://localhost:8256
    ports:
      - "8256:3000"
    depends_on:
      - prometheus
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - monitoring

  #################
  # AlertManager (Alert Routing)
  #################
  alertmanager:
    image: prom/alertmanager:v0.26.0
    container_name: ugm_aicare_alertmanager_prod
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
    volumes:
      - ../../infra/monitoring/alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml:ro
      - alertmanager_data:/alertmanager
    ports:
      - "8261:9093"
    restart: unless-stopped
    networks:
      - monitoring

  #################
  # Node Exporter (System Metrics)
  #################
  node-exporter:
    image: prom/node-exporter:v1.7.0
    container_name: ugm_aicare_node_exporter_prod
    command:
      - '--path.rootfs=/host'
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    ports:
      - "8257:9100"
    restart: unless-stopped
    networks:
      - monitoring

  #################
  # cAdvisor (Container Metrics)
  #################
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.47.2
    container_name: ugm_aicare_cadvisor_prod
    privileged: true
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    ports:
      - "8258:8080"
    restart: unless-stopped
    networks:
      - monitoring

  #################
  # Postgres Exporter (Database Metrics)
  #################
  postgres-exporter:
    image: prometheuscommunity/postgres-exporter:v0.15.0
    container_name: ugm_aicare_postgres_exporter_prod
    environment:
      - DATA_SOURCE_NAME=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}?sslmode=disable
    ports:
      - "8259:9187"
    depends_on:
      - db
    restart: unless-stopped
    networks:
      - monitoring
      - internal_network

  #################
  # Redis Exporter (Cache Metrics)
  #################
  redis-exporter:
    image: oliver006/redis_exporter:v1.55.0
    container_name: ugm_aicare_redis_exporter_prod
    environment:
      - REDIS_ADDR=redis://redis:6379
    ports:
      - "8260:9121"
    depends_on:
      - redis
    restart: unless-stopped
    networks:
      - monitoring
      - internal_network

  #################
  # Langfuse (Agent Tracing & LLM Observability)
  #################
  langfuse-server:
    image: ghcr.io/langfuse/langfuse:latest
    container_name: ugm_aicare_langfuse_prod
    ports:
      - "8262:3000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/langfuse_db?schema=public
      - NEXTAUTH_URL=${LANGFUSE_NEXTAUTH_URL:-http://localhost:8262}
      - NEXTAUTH_SECRET=${LANGFUSE_SECRET}
      - SALT=${LANGFUSE_SALT}
      - TELEMETRY_ENABLED=false
      - LANGFUSE_ENABLE_EXPERIMENTAL_FEATURES=true
    depends_on:
      - db
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3000/api/public/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    networks:
      - monitoring
      - internal_network

# Define named volumes for monitoring data persistence
volumes:
  elasticsearch_data:
  filebeat_data:
  prometheus_data:
  grafana_data:
  alertmanager_data:

# Define networks
networks:
  monitoring:
    driver: bridge
  internal_network:
    # Shared with docker-compose.prod.yml
    external: false
    name: ugm-aicare-prod_internal_network
