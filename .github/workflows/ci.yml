name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      rollback_sha:
        description: 'Git SHA to rollback to (optional)'
        required: false
        type: string

jobs:
  build-test-scan-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write # To push images to GHCR
    if: github.event_name == 'push' || github.event_name == 'pull_request' || (github.event_name == 'workflow_dispatch' && !github.event.inputs.rollback_sha)

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Install backend dependencies
        run: pip install -r requirements.txt
        working-directory: ./backend

      - name: Run backend tests (pytest)
        env:
          DATABASE_URL: "sqlite+aiosqlite:///test.db"
          EMAIL_ENCRYPTION_KEY: "example_encryption_key"
          JWT_SECRET_KEY: "a_very_long_and_secure_secret_key_for_testing_purposes"
        run: pytest
        working-directory: ./backend

      - name: Install frontend dependencies
        run: npm install
        working-directory: ./frontend

      - name: Run frontend tests (npm test)
        run: npm test
        working-directory: ./frontend

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push backend image
        uses: docker/build-push-action@v5
        with:
          context: ./backend/app
          file: ./infra/docker/backend.Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository }}/backend:${{ github.sha }}
            ghcr.io/${{ github.repository }}/backend:latest

      - name: Build and push frontend image
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          file: ./infra/docker/frontend.Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository }}/frontend:${{ github.sha }}
            ghcr.io/${{ github.repository }}/frontend:latest

      - name: Run Trivy vulnerability scan on backend image
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'ghcr.io/${{ github.repository }}/backend:${{ github.sha }}'
          format: 'table'
          exit-code: '1'
          severity: 'HIGH,CRITICAL'
          ignore-unfixed: true

      - name: Run Trivy vulnerability scan on frontend image
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'ghcr.io/${{ github.repository }}/frontend:${{ github.sha }}'
          format: 'table'
          exit-code: '1'
          severity: 'HIGH,CRITICAL'
          ignore-unfixed: true

  deploy:
    runs-on: ubuntu-latest
    environment: production
    needs: build-test-scan-push
    if: (github.event_name == 'push' && github.ref == 'refs/heads/main') || (github.event_name == 'workflow_dispatch' && !github.event.inputs.rollback_sha)
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Deploy to VM
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VM_SSH_HOST }}
          username: ${{ secrets.VM_SSH_USER }}
          key: ${{ secrets.VM_SSH_PRIVATE_KEY }}
          script: |
            export GHCR_USER=${{ github.actor }}
            export GHCR_TOKEN=${{ secrets.GITHUB_TOKEN }}
            
            cd ${{ secrets.VM_PROJECT_PATH }}
            
            if [ -n "${{ secrets.ENV_FILE_PRODUCTION }}" ]; then
              echo "${{ secrets.ENV_FILE_PRODUCTION }}" > .env
            fi
            
            ./infra/scripts/deploy.sh ${{ github.sha }}

  rollback:
    runs-on: ubuntu-latest
    environment: production
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.rollback_sha
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Rollback to previous SHA
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VM_SSH_HOST }}
          username: ${{ secrets.VM_SSH_USER }}
          key: ${{ secrets.VM_SSH_PRIVATE_KEY }}
          script: |
            export GHCR_USER=${{ github.actor }}
            export GHCR_TOKEN=${{ secrets.GITHUB_TOKEN }}
            
            cd ${{ secrets.VM_PROJECT_PATH }}
            
            if [ -n "${{ secrets.ENV_FILE_PRODUCTION }}" ]; then
              echo "${{ secrets.ENV_FILE_PRODUCTION }}" > .env
            fi
            
            ./infra/scripts/deploy.sh ${{ github.event.inputs.rollback_sha }}