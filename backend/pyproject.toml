[tool.pytest.ini_options]
# Pytest Configuration for UGM-AICare Backend Tests

# Test discovery patterns
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"

# Test paths
testpaths = ["tests"]

# Minimum Python version
minversion = "7.0"

# Add options for pytest runs
addopts = [
    "-ra",                    # Show summary of all test outcomes
    "--strict-markers",       # Enforce marker registration
    "--strict-config",        # Enforce configuration validation
    "--showlocals",          # Show local variables in tracebacks
    "-v",                    # Verbose output
    "--tb=short",            # Shorter traceback format
    "--asyncio-mode=auto",   # Auto-detect asyncio tests
]

# Markers for categorizing tests
markers = [
    "unit: Unit tests for individual functions/methods",
    "integration: Integration tests for API endpoints",
    "e2e: End-to-end tests for complete workflows",
    "slow: Tests that take longer to run",
    "auth: Authentication and authorization tests",
    "agents: Safety Agent Suite tests",
    "database: Database operation tests",
    "security: Security-related tests",
    "privacy: Privacy and consent tests",
    "mental_health: Mental health safeguard tests",
]

# Asyncio configuration
asyncio_mode = "auto"

# Coverage configuration
[tool.coverage.run]
source = ["app"]
omit = [
    "*/tests/*",
    "*/migrations/*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/.venv/*",
]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.coverage.html]
directory = "htmlcov"
