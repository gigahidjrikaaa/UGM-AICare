"""A Mako template for creating Alembic migration scripts.

This template is used by the ``alembic revision`` command to generate
a new migration script.

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '7a8a556dff02'
down_revision = '1840440620a5'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # Get inspector for idempotent checks
    bind = op.get_bind()
    inspector = sa.inspect(bind)
    existing_tables = inspector.get_table_names()
    
    # Create surveys table if it doesn't exist
    if 'surveys' not in existing_tables:
        op.create_table('surveys',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
        op.create_index(op.f('ix_surveys_id'), 'surveys', ['id'], unique=False)
    
    # Create survey_questions table if it doesn't exist
    if 'survey_questions' not in existing_tables:
        op.create_table('survey_questions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('survey_id', sa.Integer(), nullable=False),
    sa.Column('question_text', sa.Text(), nullable=False),
    sa.Column('question_type', sa.String(), nullable=False),
    sa.Column('options', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['survey_id'], ['surveys.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
        op.create_index(op.f('ix_survey_questions_id'), 'survey_questions', ['id'], unique=False)
    
    # Create survey_responses table if it doesn't exist
    if 'survey_responses' not in existing_tables:
        op.create_table('survey_responses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('survey_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['survey_id'], ['surveys.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
        op.create_index(op.f('ix_survey_responses_id'), 'survey_responses', ['id'], unique=False)
    
    # Create survey_answers table if it doesn't exist
    if 'survey_answers' not in existing_tables:
        op.create_table('survey_answers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('response_id', sa.Integer(), nullable=False),
    sa.Column('question_id', sa.Integer(), nullable=False),
    sa.Column('answer_text', sa.Text(), nullable=False),
    sa.ForeignKeyConstraint(['question_id'], ['survey_questions.id'], ),
    sa.ForeignKeyConstraint(['response_id'], ['survey_responses.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
        op.create_index(op.f('ix_survey_answers_id'), 'survey_answers', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_survey_answers_id'), table_name='survey_answers')
    op.drop_table('survey_answers')
    op.drop_index(op.f('ix_survey_responses_id'), table_name='survey_responses')
    op.drop_table('survey_responses')
    op.drop_index(op.f('ix_survey_questions_id'), table_name='survey_questions')
    op.drop_table('survey_questions')
    op.drop_index(op.f('ix_surveys_id'), table_name='surveys')
    op.drop_table('surveys')
    # ### end Alembic commands ###
