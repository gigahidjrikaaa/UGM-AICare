"""A Mako template for creating Alembic migration scripts.

This template is used by the ``alembic revision`` command to generate
a new migration script.

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '1970e622e299'
down_revision = '9d8d0d55a48a'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('intervention_agent_settings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('auto_mode_enabled', sa.Boolean(), nullable=False),
    sa.Column('human_review_required', sa.Boolean(), nullable=False),
    sa.Column('risk_score_threshold', sa.Float(), nullable=False),
    sa.Column('daily_send_limit', sa.Integer(), nullable=False),
    sa.Column('channels_enabled', sa.JSON(), nullable=True),
    sa.Column('escalation_email', sa.String(length=255), nullable=True),
    sa.Column('office_hours_start', sa.String(length=16), nullable=True),
    sa.Column('office_hours_end', sa.String(length=16), nullable=True),
    sa.Column('manual_notes', sa.Text(), nullable=True),
    sa.Column('updated_by', sa.Integer(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['updated_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_intervention_agent_settings_id'), 'intervention_agent_settings', ['id'], unique=False)
    op.alter_column('appointments', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('appointments', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.add_column('campaign_executions', sa.Column('notes', sa.Text(), nullable=True))
    op.add_column('campaign_executions', sa.Column('is_manual', sa.Boolean(), nullable=False))
    op.alter_column('campaign_executions', 'status',
               existing_type=sa.VARCHAR(length=50),
               nullable=False)
    op.alter_column('campaign_executions', 'scheduled_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('campaign_executions', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('campaign_executions', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('email_groups', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('email_groups', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('email_logs', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('email_templates', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('email_templates', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('flagged_sessions', 'status',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('intervention_campaigns', 'target_audience_size',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('intervention_campaigns', 'priority',
               existing_type=sa.VARCHAR(length=50),
               nullable=False)
    op.alter_column('intervention_campaigns', 'status',
               existing_type=sa.VARCHAR(length=50),
               nullable=False)
    op.alter_column('intervention_campaigns', 'start_date',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('intervention_campaigns', 'executions_delivered',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('intervention_campaigns', 'executions_failed',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('intervention_campaigns', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('intervention_campaigns', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('journal_prompts', 'is_active',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.alter_column('triage_assessments', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('triage_assessments', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('tweets', 'tweet_id',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
    op.alter_column('tweets', 'sentiment_score',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=False)
    op.alter_column('tweets', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('tweets', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('users', 'sentiment_score',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=False,
               existing_server_default=sa.text("'0'::double precision"))
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('users', 'sentiment_score',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=True,
               existing_server_default=sa.text("'0'::double precision"))
    op.alter_column('tweets', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('tweets', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('tweets', 'sentiment_score',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=True)
    op.alter_column('tweets', 'tweet_id',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
    op.alter_column('triage_assessments', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('triage_assessments', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('journal_prompts', 'is_active',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('intervention_campaigns', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('intervention_campaigns', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('intervention_campaigns', 'executions_failed',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('intervention_campaigns', 'executions_delivered',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('intervention_campaigns', 'start_date',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('intervention_campaigns', 'status',
               existing_type=sa.VARCHAR(length=50),
               nullable=True)
    op.alter_column('intervention_campaigns', 'priority',
               existing_type=sa.VARCHAR(length=50),
               nullable=True)
    op.alter_column('intervention_campaigns', 'target_audience_size',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('flagged_sessions', 'status',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('email_templates', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('email_templates', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('email_logs', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('email_groups', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('email_groups', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('campaign_executions', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('campaign_executions', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('campaign_executions', 'scheduled_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('campaign_executions', 'status',
               existing_type=sa.VARCHAR(length=50),
               nullable=True)
    op.drop_column('campaign_executions', 'is_manual')
    op.drop_column('campaign_executions', 'notes')
    op.alter_column('appointments', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('appointments', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.drop_index(op.f('ix_intervention_agent_settings_id'), table_name='intervention_agent_settings')
    op.drop_table('intervention_agent_settings')
    # ### end Alembic commands ###
